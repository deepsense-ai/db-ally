[build-system]
requires = [
    "setuptools >= 40.9.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.isort]
multi_line_output=3
line_length=120
include_trailing_comma = true
known_first_party=[
    'dbally'
]
known_third_party=[  # Most popular libraries. Extend if necessary.
    'IPython',
    'PIL',
    'cv2',
    'dotenv',
    'editdistance',
    'fastapi',
    'fire',
    'hydra',
    'joblib',
    'loguru',
    'luigi',
    'matplotlib',
    'neptune',
    'neptune_config',
    'nltk',
    'numpy',
    'omegaconf',
    'pandas',
    'pqdm',
    'pydantic',
    'pytest',
    'pytorch_lightning',
    'requests',
    'scipy',
    'setuptools',
    'shapely',
    'skimage',
    'sklearn',
    'streamlit',
    'torch',
    'torchvision',
    'tqdm',
    'typer',
]
skip_gitignore=true

[tool.black]
line_length=120

[tool.pytest]
norecursedirs=[
    '.git',
    '.tox',
    '.env',
    'dist',
    'build',
    'migrations',
    'docker',
    'config',
    'notebooks',
    'research',
]
python_files = ['test_*.py']
addopts = [
    '-ra',
    '--showlocals',
    '--strict-markers',
    '--ignore=docs/conf.py',
    '--ignore=setup.py',
    '--ignore=ci',
    '--ignore=.eggs',
    '--doctest-modules',
    '--doctest-glob=\*.rst',
    '--tb=short',
]
testpaths = ['tests']

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = ["."]

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
warn_unused_ignores = false
show_error_codes = true
check_untyped_defs = true
no_implicit_optional = true
mypy_path=['src']
exclude=['venv', 'docs']

[[tool.mypy.overrides]]
module = "dbally.*"
ignore_missing_imports = false
disallow_untyped_defs = true

[tool.pylint.basic]
good-names="i,j,x,y,z,x1,y1,z1,x2,y2,z2,cv,df,dx,dy,dz,w,h,c,b,g,qa,q,a"
max-args=8

[tool.pylint.main]
load-plugins=["pylint.extensions.docparams"]

[tool.pylint.messages_control]
disable=[
        "suppressed-message",
        # therefore we wouldn't have to install full dependency set in order to lint
        "import-error",
        # sometimes we create a dataclass or Pydantic module and just don't need public methods
        "too-few-public-methods",
        # below is handled by pycln
        "unused-import",
        # below is handled by isort
        "wrong-import-order",
        # too restrictive
        "too-many-instance-attributes",
        # not necessary nor useful in our projects
        "missing-module-docstring"
        ]

[tool.pylint.format]
max-line-length=120

[tool.pylint.miscellaneous]
notes=["XXX"]

[tool.pylint.parameter_documentation]
accept-no-param-doc = false
accept-no-raise-doc = false
accept-no-return-doc = false
accept-no-yields-doc = false
default-docstring-type = "google"

[tool.pylint.design]
max-locals=20

[tool.pylint.similarities]
min-similarity-lines=10

[tool.bandit]
exclude_dirs = ["venv",]
# B101 disables errors for asserts in the code
# remember to not use asserts for security and control flows
skips = ["B101"]


[tool.semantic_release]
assets = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = false
allow_zero_version = true
tag_format = "v{version}"
version_variables = ["src/dbally/__version__.py:__version__"]
build_command = "pip install build && python -m build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
